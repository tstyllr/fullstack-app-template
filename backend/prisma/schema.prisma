// Prisma schema file
// Learn more: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int                  @id @default(autoincrement())
  phone              String               @unique @db.VarChar(20)
  name               String?              @db.VarChar(255)
  password           String?              @db.VarChar(255)
  isAdmin            Boolean              @default(false)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  refreshTokens      RefreshToken[]
  verificationCodes  VerificationCode[]
  chatMessages       ChatMessage[]

  @@map("users")
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique @db.VarChar(500)
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  createdAt DateTime @default(now())
  isRevoked Boolean  @default(false)

  @@index([userId])
  @@map("refresh_tokens")
}

model VerificationCode {
  id        Int      @id @default(autoincrement())
  phone     String   @db.VarChar(20)
  code      String   @db.VarChar(10)
  userId    Int?
  user      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  isUsed    Boolean  @default(false)
  createdAt DateTime @default(now())

  @@index([phone])
  @@index([userId])
  @@map("verification_codes")
}

model ChatMessage {
  id             String   @id @default(uuid())
  conversationId String   @db.VarChar(36)
  role           String   @db.VarChar(20) // 'system', 'user', 'assistant'
  content        String   @db.Text
  userId         Int
  user           User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt      DateTime @default(now())

  @@index([conversationId])
  @@index([userId])
  @@map("chat_messages")
}
